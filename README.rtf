{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red129\green95\blue3;
\red0\green0\blue0;\red14\green14\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0\c85000;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c50580\c37140\c1210;
\csgenericrgb\c0\c0\c0\c70000;\csgenericrgb\c5500\c5500\c100000;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab642
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 \

\fs40 \cf4 #\cf2  WeatherApp
\fs26 \
\
WeatherApp is an iOS application that provides real-time weather information and 5-day forecasts for various locations. Built using Swift and the MVVM architecture, it integrates with WeatherAPI to provide accurate and up-to-date weather data.\
\

\fs32 \cf4 ##\cf2  Table of Contents
\fs26 \
\cf4 * \cf2 Features\
\cf4 * \cf2 Requirements\
\cf4 * \cf2 API Information\
\cf4 * \cf2 Installation\
\cf4 * \cf2 How to Use\
\cf4 * \cf2 Testing\
\cf4 * \cf2 Technology Implementation\
\cf4 * \cf2 Additional Details\
\cf4 * \cf2 Demo\
\

\fs32 \cf4 ##\cf2  Features
\fs26 \
\cf4 * **
\f1\b \cf2 Real-Time Weather
\f0\b0 \cf4 **\cf2 :Displays current temperature, wind speed, humidity, and other key weather details for the selected location.\
\cf4 * **
\f1\b \cf2 5-Day Forecast
\f0\b0 \cf4 **\cf2 :Provides extended weather forecasts for the next five days with temperature and weather conditions.\
\cf4 * **
\f1\b \cf2 City Search
\f0\b0 \cf4 **\cf2 :Allows users to search weather data by entering a city name, making it easy to find weather information for any location.\
\cf4 * **
\f1\b \cf2 Unit Testing
\f0\b0 \cf4 **\cf2 :Includes unit tests for services, ensuring stability and correctness of the app.\
\

\fs32 \cf4 ##\cf2  Requirements
\fs26 \
\cf4 * \cf2 Xcode 16.3 or later\
\cf4 * \cf2 Swift 5 or later\
\cf4 * \cf2 Internet connection for fetching weather data\
\

\fs32 \cf4 ##\cf2  How to Use
\fs26 \
\cf5 ```bash\cf2 \
\cf5 1.**Open the app**:Launch the WeatherApp on your iOS device or simulator.\cf2 \
\cf5 2.**Tap on the search bar**:Once the app is open, you\'92ll see a search bar at the top of the screen.\cf2 \
\cf5 3.**Type the city name**:Tap the search bar and enter the name of the city for which you want to get the weather information.\cf2 \
\cf5 4.**Search**:After typing the city name, press "Search" on the keyboard to fetch the weather data for that city.\cf2 \
\cf5 5.**View weather details**:The app will display the current weather information (temperature, wind speed, humidity, etc.) for the selected city, along with a 5-day weather forecast.\cf2 \
\cf5 ```\cf2 \
\
\
\

\fs32 \cf4 ##\cf2  API Reference
\fs26 \
\
\cf4 ####\cf2  Get Weather Data\
\
\cf5 ```http\cf2 \
\cf5   GET api.weatherapi.com/v1/forecast.json\cf2 \
\cf5 ```\cf2 \
\
| Parameter | Type     | Description                |\
| :-------- | :------- | :------------------------- |\
| \cf4 `\cf5 key\cf4 `\cf2      | \cf4 `\cf5 string\cf4 `\cf2  | \cf4 **
\f1\b \cf2 Required
\f0\b0 \cf4 **\cf2 .  API key.    |\
| \cf4 `\cf5 city\cf4 `\cf2     | \cf4 `\cf5 string\cf4 `\cf2  | \cf4 **
\f1\b \cf2 Required
\f0\b0 \cf4 **\cf2 . city name    |\
| \cf4 `\cf5 days\cf4 `\cf2     | \cf4 `\cf5 Int\cf4 `\cf2     | \cf4 **
\f1\b \cf2 Required
\f0\b0 \cf4 **\cf2 . Number of days |\
\

\fs40 \cf4 #\cf2  Link : 
\fs26 \
\cf6 https://www.weatherapi.com/api-explorer.aspx\cf2 \
\

\fs32 \cf4 ##\cf2  Installation
\fs26 \
\
\cf5 ```bash\cf2 \
\cf5 1. Clone the repository:git clone https://github.com/shipra03nagarro/weather-app.git\cf2 \
\cf5 2. Open the project in Xcode:\cf2 \
\cf5     * Navigate to the project directory and open WeatherApp.xcodeproj or WeatherApp.xcworkspace.\cf2 \
\cf5 3. Install dependencies (if any):\cf2 \
\cf5     * If your project uses CocoaPods, run:pod install\cf2 \
\cf5     * If your project uses Swift Package Manager, dependencies should be installed automatically.\cf2 \
\cf5 4. Build and run the project:\cf2 \
\cf5     * Select the target device (simulator or physical device) and click the Run button in Xcode.\cf2 \
\cf5 ```\cf2 \
    \

\fs32 \cf4 ##\cf2  Tech Stack
\fs26 \
\
\cf4 *\cf2  Swift:The app is built using Swift for a clean, modern codebase.\
\cf4 *\cf2  MVVM Architecture:The app follows the Model-View-ViewModel architecture to separate concerns and enhance maintainability.\
\cf4 *\cf2  Unit Testing:Uses Xcode\'92s built-in testing framework to ensure the app's functionality is correct and stable.\
\cf4 ##\cf2  Running Tests\
\
\cf5 ```bash\cf2 \
\cf5 Open the Test Navigator:\cf2 \
\cf5 Press Cmd + 5 or select View > Navigators > Show Test Navigator from the top Xcode menu.\cf2 \
\
\cf5 Locate WeatherServiceTests:\cf2 \
\cf5 In the Test Navigator panel, you should see a list of your tests. Find WeatherServiceTests (or the name you gave your test file).\cf2 \
\
\cf5 Run the Tests:\cf2 \
\cf5 Click the Run button (the green triangle) next to WeatherServiceTests to run all the tests in that class.\cf2 \
\
\cf5 If you only want to run a specific test, you can click the Run button next to that individual test method (e.g., testFetchWeatherReport_success).\cf2 \
\cf5 ```\cf2 \
\
\

\fs32 \cf4 ##\cf2  Screenshots
\fs26 \
![WeatherApp Screenshot]}